{
    "problem_data"             : {
        "problem_name"    : "structure",
        "model_part_name" : "Structure",
        "domain_size"     : 3,
        "parallel_type"   : "OpenMP",
        "time_step"       : 1.1,
        "start_time"      : 0.0,
        "end_time"        : 1.0,
        "echo_level"      : 1
    },
    "solver_settings"          : {
        "solver_type"                        : "eigen_value",
        "scheme_type"                        : "dynamic",
        "echo_level"                         : 0,
        "model_import_settings"              : {
            "input_type"     : "mdpa",
            "input_filename" : "structure"
        },
        "material_import_settings"           : {
            "materials_filename" : "material.json"
        },
        "eigensolver_settings":{
            "solver_type": "eigen_eigensystem",
            "number_of_eigenvalues": 2,
            "max_iteration": 1000,
            "tolerance": 1e-6,
            "echo_level": 1
        },
        "problem_domain_sub_model_part_list" : ["Parts_structure"],
        "processes_sub_model_part_list"      : ["DISPLACEMENT_support","PointLoad3D_load_point"],
        "rotation_dofs"                      : false
    },
    "constraints_process_list" : [{
        "python_module" : "assign_vector_variable_process",
        "kratos_module" : "KratosMultiphysics",
        "help"          : "This process fixes the selected components of a given vector variable",
        "process_name"  : "AssignVectorVariableProcess",
        "Parameters"    : {
            "mesh_id"         : 0,
            "model_part_name" : "DISPLACEMENT_support",
            "variable_name"   : "DISPLACEMENT",
            "constrained"     : [true,true,true],
            "value"           : [0.0,0.0,0.0],
            "interval"        : [0.0,"End"]
        }
    }],
    "contact_process_list"     : [],
    "loads_process_list"       : [{
        "python_module" : "assign_vector_by_direction_to_condition_process",
        "kratos_module" : "KratosMultiphysics",
        "help"          : "This process sets a vector variable value over a condition according to a given modulus an direction",
        "check"         : "DirectorVectorNonZero direction",
        "process_name"  : "AssignVectorByDirectionToConditionProcess",
        "Parameters"    : {
            "mesh_id"         : 0,
            "model_part_name" : "PointLoad3D_load_point",
            "variable_name"   : "POINT_LOAD",
            "modulus"         : 10000.0,
            "direction"       : [0.0,-1.0,0.0],
            "interval"        : [0.0,"End"]
        }
    }],
    "_output_configuration"     : {
        "result_file_configuration" : {
            "gidpost_flags"       : {
                "GiDPostMode"           : "GiD_PostBinary",
                "WriteDeformedMeshFlag" : "WriteDeformed",
                "WriteConditionsFlag"   : "WriteConditions",
                "MultiFileFlag"         : "SingleFile"
            },
            "file_label"          : "step",
            "output_control_type" : "step",
            "output_frequency"    : 1,
            "body_output"         : true,
            "node_output"         : false,
            "skin_output"         : false,
            "plane_output"        : [],
            "nodal_results"       : ["DISPLACEMENT","REACTION"],
            "gauss_point_results" : ["VON_MISES_STRESS"]
        },
        "point_data_configuration"  : []
    },
    "list_other_processes": [
        {
            "python_module" : "from_json_check_result_process",
            "kratos_module" : "KratosMultiphysics",
            "help"          : "",
            "process_name"  : "FromJsonCheckResultProcess",
            "Parameters"    : {
                "check_variables"  : ["SHAPE_CHANGE_X","SHAPE_CHANGE_Y","SHAPE_CHANGE_Z"],
                "input_file_name"  : "shape_change_results.json",
                "model_part_name"  : "structure",
                "time_frequency"   : 0.0
            }
        }
    ],
    "_json_output_process" : [
        {
            "python_module" : "json_output_process",
            "kratos_module" : "KratosMultiphysics",
            "help"          : "",
            "process_name"  : "JsonOutputProcess",
            "Parameters"    : {
                "output_variables" : ["SHAPE_CHANGE_X","SHAPE_CHANGE_Y","SHAPE_CHANGE_Z"],
                "output_file_name" : "shape_change_results.json",
                "model_part_name"  : "structure",
                "time_frequency"   : 0.0
            }
    }],
    "restart_options"          : {
        "SaveRestart"      : false,
        "RestartFrequency" : 0,
        "LoadRestart"      : false,
        "Restart_Step"     : 0
    },
    "constraints_data"         : {
        "incremental_load"         : false,
        "incremental_displacement" : false
    },
    "optimization_settings" : {
        "objectives" : [{
            "identifier" : "eigenfrequency",
            "type"       : "maximization",
            "use_kratos" : true,
            "kratos_response_settings":{
                "gradient_mode"          : "semi_analytic",
                "step_size"              : 1e-6,
                "traced_eigenfrequency"  : [1,2],
                "weighting_method"       : "linear_scaling",
                "KS_parameter"           : 1,
                "weighting_factors"      : [1.0, 1.0],
                "consider_discretization": false
            }
        }],
        "constraints" : [],
        "design_variables" : {
            "type"                               : "vertex_morphing",
            "optimization_model_part_name"       : "structure",
            "design_surface_sub_model_part_name" : "design_surface",
            "domain_size"                        : 3,
            "filter" : {
                "filter_function_type"       : "linear",
                "filter_radius"              : 0.3,
                "max_nodes_in_filter_radius" : 10000,
                "matrix_free_filtering"      : true
            },
            "mesh_motion" : {
                "apply_ale_mesh_solver" : false
            },
            "damping" : {
                "perform_damping" : false
            }
        },
        "optimization_algorithm" : {
            "name"                                 : "steepest_descent",
            "max_iterations"                       : 5,
            "relative_tolerance"                   : 5e-0,
            "project_gradients_on_surface_normals" : true
        },
        "line_search" : {
            "line_search_type"           : "manual_stepping",
            "normalize_search_direction" : true,
            "step_size"                  : 0.1
        },
        "output" : {
            "output_directory"        : "Optimization_Results",
            "response_log_filename"   : "response_log",
            "design_history_filename" : "design_history",
            "design_output_mode"      : "WriteOptimizationModelPart",
            "nodal_results" : [ "SHAPE_CHANGE" ],
            "output_format" : {
                "name"              : "gid",
                "gid_configuration" : {
                    "result_file_configuration" : {
                        "gidpost_flags"       : {
                            "GiDPostMode"           : "GiD_PostBinary"
                        },
                        "output_frequency"    : 1.0
                    }
                }
            }
        }
    }
}
